import asyncio
import sys
from datetime import datetime

# ===============================
# Run ALL scripts sequentially, then wait a single countdown for the next cycle
# ===============================

# ƒê∆∞·ªùng d·∫´n python hi·ªán t·∫°i (lu√¥n ƒë√∫ng venv)
PYTHON_EXEC = sys.executable

# Danh s√°ch script c·∫ßn ch·∫°y (tu·∫ßn t·ª±, c√≥ th·ªÉ th√™m nhi·ªÅu file)
scripts = [
    #"F3_infer_mi38_live_3y_any.py",
    "F3_infer_mi38_live_3y_filter.py",
    # th√™m script kh√°c n·∫øu c·∫ßn
]

# S·ªë ph√∫t ch·ªù gi·ªØa c√°c v√≤ng l·∫∑p (to√†n b·ªô batch)
CYCLE_INTERVAL_MINUTES = 10

# ƒê·∫øm s·ªë l·∫ßn ƒë√£ ch·∫°y cho t·ª´ng file
execution_count = {f: 0 for f in scripts}


async def countdown(total_seconds: int, label: str) -> None:
    """ƒê·∫øm ng∆∞·ª£c t·ª´ng gi√¢y, in ƒë√® tr√™n c√πng m·ªôt d√≤ng."""
    for remaining in range(total_seconds, 0, -1):
        m, s = divmod(remaining, 60)
        print(f"‚è≥ {label} | c√≤n l·∫°i {m:02d}:{s:02d}  ", end="\r", flush=True)
        await asyncio.sleep(1)
    print(" " * 60, end="\r")  # clear the line


async def run_all_scripts_once():
    """Ch·∫°y tu·∫ßn t·ª± to√†n b·ªô scripts m·ªôt l·∫ßn."""
    for file in scripts:
        start = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        print(f"\n[{start}] üîÅ ƒêang ch·∫°y {file} ...")
        try:
            process = await asyncio.create_subprocess_exec(
                PYTHON_EXEC, file,
                stdout=asyncio.subprocess.PIPE,
                stderr=asyncio.subprocess.PIPE
            )
            stdout, stderr = await process.communicate()

            execution_count[file] += 1
            if process.returncode == 0:
                print(f"‚úÖ Ho√†n t·∫•t {file} (l·∫ßn {execution_count[file]})")
                if stdout:
                    print(stdout.decode().strip())
            else:
                print(f"‚ö†Ô∏è L·ªói {file} (m√£ {process.returncode}) (l·∫ßn {execution_count[file]})")
                if stderr:
                    print(stderr.decode().strip())

        except Exception as e:
            print(f"‚ùå Kh√¥ng ch·∫°y ƒë∆∞·ª£c {file}: {e}")


async def main():
    while True:
        await run_all_scripts_once()
        # Sau khi CH·∫†Y H·∫æT, m·ªõi ƒë·∫øm ng∆∞·ª£c 1 l·∫ßn cho c·∫£ v√≤ng
        await countdown(CYCLE_INTERVAL_MINUTES * 60,
                        f"Ch·ªù ch·∫°y l·∫°i c·∫£ batch sau {CYCLE_INTERVAL_MINUTES} ph√∫t")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚õî ƒê√£ d·ª´ng theo y√™u c·∫ßu ng∆∞·ªùi d√πng.")
